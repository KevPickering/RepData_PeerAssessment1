help (unzip)
if (file.exists("activity.zip")) {}
if (file.exists("activity.zip")) {
unzip("activity.zip", overwrite=TRUE)
}
activity <- read.csv("activity.csv")
head(activity)
tail(activity)
summary(activity)
activity(steps==0,)
activity[steps==0,]
activity[activity$steps==0,]
dim(activity)
structure(activity)
sapply(activity, FUN=class())
sapply(activity, class)
activity <- read.csv("activity.csv")
if(class(activity$date == "factor")){
names(activity) [names(activity) == "date"] <- c("dateFactor")
}
if(class(activity$date) == "factor")){
class(activity$date)
isfactor.class(activity$date)
isfactor(class(activity$date))
names(activity) [names(activity) == "date"] <- c("dateFactor")
names(activity)
activity$date <- as.date(activity$dateFactor)
activity$date <- as.date(activity, "%Y-%m-$d")
activity$date <- as.Date(activity, "%Y-%m-$d")
activity$date <- as.Date(activity$dateFactor, "%Y-%m-$d")
head(activity)
chars <- as.character(activity$dateFactor)
chars <- as.Date(as.character(activity$dateFactor), "%Y-%m-%d")
activity$date <- as.Date(as.character(activity$dateFactor), "%Y-%m-%d")
head(activity)
help("aggregate")
meanPerDay <- aggregate(activity$steps, by=list(activity$day), FUN=mean())
meanPerDay <- aggregate(activity$steps, by=list(activity$day), FUN=mean)
meanPerDay <- aggregate(activity$steps, by=list(activity$day), FUN=sum)
aggregate(activity$steps, by=list(activity$day), FUN=sum)
head(activity$steps)
aggregate(activity$steps, by=list(activity$date), FUN=mean)
aggregate(activity$steps, by=list(activity$date) = "Date", FUN=mean)
meanPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=mean)
names(meanPerDay) <- c("Date", "MeanSteps")
meanPerDay
medianPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=median)
names(medianPerDay) <- c("Date", "MedianSteps")
totalPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=total)
totalPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
names(totalPerDay) <- c("Date", "TotalSteps")
data <- meanPerDay
data <- merge(data, medianPerDay, by="Date")
data <- merge(data, totalPerDay, by="Date")
head(data)
data
help("median")
medianPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=median)
head(medianPerDay)
medianPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=median, na.rm=FALSE)
head(medianPerDay)
medianPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=median, na.rm=TRUE)
head(medianPerDay)
median(activity$steps)
median(activity$steps, na.rm=TRUE)
head(meanPerDay)
library(ggplot)
library(ggplot2)
ggplot(data, aes(x=Date, y=TotalSteps)) + geom(stat="identity")
ggplot(data, aes(x=Date, y=TotalSteps)) + geom_bar(stat="identity")
help("ggplot")
qplot(data$Date, data$TotalSteps, geom="bar", stat="identity")
ggplot(data, aes(x=Date, y=TotalSteps)) + geom_bar(stat="identity") + ylab("Total Steps")
data[, -("TotalSteps")]
data[, -c("TotalSteps")]
subset(data, c("Date", "MeanSteps"))
data[, c("Date", "MeanSteps")]
data[, c("Date", "MeanSteps", "MedianSteps")]
data[, -c("TotalSteps")]
data[, -(c("TotalSteps")]
ggplot(data, aes(x=Date, y=MeanSteps)) + geom_line() + geom_point() + ylab("Average Steps")
ggplot(data, aes(x=Date, y=MeanSteps)) + geom_line() + geom_point() + ylab("Average Steps") + title(main="Average Daily Activity Pattern")
ggplot(data, aes(x=Date, y=MeanSteps)) + geom_line() + geom_point() + ylab("Average Steps") + title("Average Daily Activity Pattern")
ggplot(data, aes(x=Date, y=MeanSteps)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern")
timeSeries <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
head(activity)
timeSeries <- aggregate(activity$steps, by=list(activity$interval), FUN=mean)
head(timeSeries)
timeSeries
test <- data.frame(ID=c(1,1,1,1,1,1,1), val=(1,1,2,5,6,7,25))
test <- data.frame(ID=c(1,1,1,1,1,1,1), va(1,1,2,5,6,7,25))
test <- data.frame(c(1,1,1,1,1,1,1), (1,1,2,5,6,7,25))
x <- c(1,1,1,1,1,1,1)
class (x)
y <- c(1,1,2,5,6,7,25)
class (y)
test <- data.frame(x,y)
test <- data.frame(ID=x, Val=y)
mean(test$Val)
median(test$Val)
y <- c(1,1,2,NA,6,7,25)
class(y)
test <- data.frame(ID=x, Val=y)
is.NA(test$Val)
is.na(test$Val)
mean(test$Val)
median(test$Val)
median(test$Val, na.rm=TRUE)
mean(test$Val, na.rm=T)
help ("aggregate")
head(timeSeries)
head(activity)
table(activity)
mean(activity$interval)
paste("000", "1")
paste("000", "1", sep="")
test <- paste("000", "1", sep="")
test
help("substr")
substr(test, -4, -1)
str_sub(test, -4, -1)
substr(test, nchar(test) - 3, nchar(test))
test <- paste("000", "10", sep="")
substr(test, nchar(test) - 3, nchar(test))
activity$timeStr <- paste("000", as.character(activity$interval), sep="")
head(activity)
activity$time <- substr(activity$timeStr, nchar(activity$timeStr) - 3, nchar(activity$timeStr))
head(activity)
class(activity$time)
timeSeries <- aggregate(activity$steps, by=list(activity$interval), FUN=mean())
timeSeries <- aggregate(activity$steps, by=list(activity$date), FUN=mean)
timeSeries <- aggregate(activity$steps, by=list(activity$interval), FUN=mean)
head(timeSeries)
timeSeries <- aggregate(activity$steps, by=list(activity$date), FUN=mean)
head(timeSeries)
head(activity)
int0 <- activity[interval==0, ]
int0 <- activity[activity$interval==0, ]
head(int0)
int0
mean(int0$steps)
mean(int0$steps, na.rm=TRUE)
timeSeries <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.action=na.omit)
head(timeSeries)
library(dplyr)
timeSeries <- ddply(activity, "interval", summarise, avg=mean(steps))
library(plyr)
timeSeries <- ddply(activity, "interval", summarise, avg=mean(steps))
head(timeSeries)
timeSeries <- ddply(activity, "interval", summarise, avg=mean(steps, na.rm=TRUE))
head(timeSeries)
timeSeries <- ddply(activity, intervalId="interval", summarise, avg=mean(steps, na.rm=TRUE))
meanPerDay <- ddply(activity, "date", summarise, MeanSteps=mean(steps, na.rm=TRUE))
head(meanPerDay)
medianPerDay <- ddply(activity, "date", summarise, MedianSteps=median(steps, na.rm=TRUE))
head(medianPerDay)
totalPerDay <- ddply(activity, "date", summarise, MedianSteps=sum(steps, na.rm=TRUE))
head(totalPerDay)
ggplot(data, aes(x=interval, y=MeanSteps)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern")
library(ggplot2)
ggplot(data, aes(x=interval, y=MeanSteps)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern")
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern")
max(timeSeries$avg, na.rm=TRUE)
maxInterval <- timeSeries[avg==max(timeSeries$avg, na.rm=TRUE), c("interval")]
head(timeSeries)
maxSteps <- max(timeSeries$avg, na.rm=TRUE)
maxSteps
class(maxSteps)
maxInterval <- timeSeries[avg==206.1698, c("interval")]
maxInterval <- timeSeries[timeSeries$avg==206.1698, c("interval")]
maxInterval
maxInterval <- timeSeries[timeSeries$avg==206.1698, "interval"]
maxInterval
maxInterval <- timeSeries[timeSeries$avg==max(timeSeries$avg, na.rm=TRUE), c("interval")]
maxInterval
maxSteps <- timeSeries[timeSeries$avg==max(timeSeries$avg, na.rm=TRUE), c("interval")]
maxSteps
maxSteps <- max(timeSeries$avg, na.rm=TRUE)
maxSteps
maxInterval <- timeSeries[timeSeries$avg==max(timeSeries$avg, na.rm=TRUE), c("interval")]
maxInterval
class(maxInterval)
class(maxSteps)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+100, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "))
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+500, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred")
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+200, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=3)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+200, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=5)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+300, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=6)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+400, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=6)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+400, y=maxSteps-20, label=paste("Interval with max steps (", maxSteps, ")", maxInterval, sep=" "), colour="darkred", size=6)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+400, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=6)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+400, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=8)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+500, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=8)
apply(is.na(activity$steps), sum)
apply(is.na(activity$steps), FUN=sum)
help("is.na")
apply(is.na(activity),2, FUN=sum)
maxSteps <- max(timeSeries$avg, na.rm=TRUE)
maxSteps
maxInterval <- timeSeries[timeSeries$avg==maxSteps, c("interval")]
maxInterval
head(activity)
activity$Id <- paste(activity$dateFactor, activity$interval, sep=":")
head(activity)
nullRows <- activity[is.na(activity$steps), ]
notNullRows <- activity[!is.na(activity$steps), ]
notNullRows <- activity[!is.na(activity$steps), ]
rm(notNullRows)
completeData <- activity[!is.na(activity$steps), ]
head(nullRows)
head(timeSeries)
nullRows <- nullRows[, -c("steps")]
nullRows <- nullRows[, -(c("steps"))]
nullRows <- subset(nullRows, select=-steps)
head(nullRows)
nullRows <- merge(nullRows, timeSeries, by="interval")
head(nullRows)
names(nullRows) [names(nullRows) == "avg"] <- c("steps")
head(nullRows)
rm(c("activity", "completeData", "data", "int0", "meanPerDay", "medianPerDay", "nullRows", "timeSeries", "totalPerDay"))
rm(c("activity", "completeData", "data", "int0", "meanPerDay", "medianPerDay", "nullRows", "timeSeries", "totalPerDay"))
rm(list("activity", "completeData", "data", "int0", "meanPerDay", "medianPerDay", "nullRows", "timeSeries", "totalPerDay"))
rm(c("activity", "completeData"))
rm(activity)
rm(completeData)
rm(data)
rm(int0)
rm(meanPerDay)
rm(medianPerDay)
rm(nullRows)
rm(timeSeries)
rm(totalPerDay)
rm(chars)
rm(maxInterval)
rm(maxSteps)
rm(test)
if (file.exists("activity.zip")) {
unzip("activity.zip", overwrite=TRUE)
}
activity <- read.csv("activity.csv")
names(activity) [names(activity) == "date"] <- c("dateFactor")
activity$date <- as.Date(as.character(activity$dateFactor), "%Y-%m-%d")
library(plyr)
meanPerDay <- ddply(activity, "date", summarise, MeanSteps=mean(steps, na.rm=TRUE))
medianPerDay <- ddply(activity, "date", summarise, MedianSteps=median(steps, na.rm=TRUE))
totalPerDay <- ddply(activity, "date", summarise, TotalSteps=sum(steps, na.rm=TRUE))
data <- meanPerDay
data <- merge(data, medianPerDay, by="date")
data <- merge(data, totalPerDay, by="date")
library(ggplot2)
timeSeries <- ddply(activity, "interval", summarise, avg=mean(steps, na.rm=TRUE))
maxSteps <- max(timeSeries$avg, na.rm=TRUE)
maxInterval <- timeSeries[timeSeries$avg==maxSteps, c("interval")]
apply(is.na(activity),2, FUN=sum)
nullRows <- activity[is.na(activity$steps), ]
completeData <- activity[!is.na(activity$steps), ]
nullRows <- subset(nullRows, select=-steps)
nullRows <- merge(nullRows, timeSeries, by="interval")
names(nullRows) [names(nullRows) == "avg"] <- c("steps")
head(nullRows)
nullRows <- nullRows[c("steps", "interval", "dateFactor", "date")]
head(nullRows)
completeData <- data.frame(completeData, nullRows)
help("rbind")
test1 <- data.frame(id=c(1,2,3), val=c(2,5,8))
head(test1)
test2 <- data.frame(id=c(4,5,6), val=c(1,5,9))
head(test2)
rtest <- rbind(test1, test2)
rtest
rm(test1)
rm(test2)
completeData <- rbind(completeData, nullRows)
newTotalPerDay <- ddply(completeData, "date", summarise, TotalSteps=sum(steps, na.rm=TRUE))
newMeanPerDay <- ddply(completeData, "date", summarise, MeanSteps=mean(steps, na.rm=TRUE))
newMedianPerDay <- ddply(completeData, "date", summarise, MedianSteps=median(steps, na.rm=TRUE))
head(newTotalPerDay)
newData <- newMeanPerDay
newData <- merge(newData, newMedianPerDay, by="date")
newData <- merge(newData, newTotalPerDay, by="date")
ggplot(data, aes(x=date, y=TotalSteps)) + geom_bar(stat="identity") + xlab("Date") + ylab("Total Steps")
ggplot(newData, aes(x=date, y=TotalSteps)) + geom_bar(stat="identity") + xlab("Date") + ylab("Total Steps")
ggplot(newData, aes(x=date, y=TotalSteps)) + geom_bar(stat="identity") + xlab("Date") + ylab("Total Steps" + ggtitle("Total Daily Steps (c/w Imputed Balues)"))
ggplot(newData, aes(x=date, y=TotalSteps)) + geom_bar(stat="identity") + xlab("Date") + ylab("Total Steps") + ggtitle("Total Daily Steps (c/w Imputed Balues)")
ggplot(newData, aes(x=date, y=TotalSteps)) + geom_bar(stat="identity") + xlab("Date") + ylab("Total Steps") + ggtitle("Total Daily Steps (c/w Imputed Values)")
newData[, c("date", "MeanSteps", "MedianSteps")]
help("weekdays")
weekdays("06/02/2016")
weekdays(as.date("06/02/2016", %D/%m/%Y))
weekdays(as.date("06/02/2016", "%D/%m/%Y"))
weekdays(as.Date("06/02/2016", "%D/%m/%Y"))
weekdays(as.Date("06/02/2016"))
head(newData)
class(newData$date)
class(completeData$date)
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
completeData$weekday <- factor(weekdays(completeData$date) %IN% weekdays), levels=c(TRUE, FALSE), labels=c("Weekday", "Weekend")
completeData$weekday <- factor(weekdays(completeData$date) %in% weekdays), levels=c(TRUE, FALSE), labels=c("Weekday", "Weekend")
completeData$weekday <- factor((weekdays(completeData$date) %in% weekdays), levels=c(TRUE, FALSE), labels=c("Weekday", "Weekend")
)
head(completeData)
head(completeData, 20)
summary(completeData)
completeData$weekday <- factor((weekdays(completeData$date) %in% weekdays), levels=c(TRUE, FALSE), labels=c("Weekday", "Weekend"))
help(ddply)
newTimeSeries <- ddply(completeData, c("interval", "weekday"), summarise, avg=mean(steps, na.rm=TRUE))
head(newTimeSeries)
ggplot(timeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + annotate("text", x=maxInterval+500, y=maxSteps-20, label=paste("Interval with max steps:", maxInterval, sep=" "), colour="darkred", size=8)
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~, )
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. )
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line(colour=factor(weekday)) + geom_point() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. )
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. )
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. ) + theme(strip.text = element_text())
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. ) + theme(strip.text = element_text(), element_background = element_rect())
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. ) + theme(strip.text = element_text(), strip.background = element_rect())
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. ) + theme(strip.text = element_text(), strip.background = element_rect(fill="yellow", colour="black", size=1))
ggplot(newTimeSeries, aes(x=interval, y=avg)) + geom_line() + ylab("Average Steps") + ggtitle("Average Daily Activity Pattern") + facet_grid(weekday ~. ) + theme(strip.text = element_text(face="bold", size=rel(1.5)), strip.background = element_rect(fill="yellow", colour="black", size=1))
